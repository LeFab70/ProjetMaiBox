const mysql = require('mysql2/promise');
require('dotenv').config();

async function testDatabaseConnection() {
  console.log('üß™ Test de connexion √† la base de donn√©es...\n');

  const dbConfig = {
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || 'root123@@',
    database: process.env.DB_NAME || 'mailBoxBd',
    port: process.env.DB_PORT || 3306
  };

  console.log('Configuration de connexion:');
  console.log(`- Host: ${dbConfig.host}`);
  console.log(`- User: ${dbConfig.user}`);
  console.log(`- Database: ${dbConfig.database}`);
  console.log(`- Port: ${dbConfig.port}`);
  console.log(`- Password: ${dbConfig.password ? '***' : 'non d√©fini'}\n`);

  try {
    // Test de connexion sans sp√©cifier la base de donn√©es
    console.log('1. Test de connexion au serveur MySQL...');
    const connection = await mysql.createConnection({
      host: dbConfig.host,
      user: dbConfig.user,
      password: dbConfig.password,
      port: dbConfig.port
    });

    console.log('‚úÖ Connexion au serveur MySQL r√©ussie !');

    // V√©rifier si la base de donn√©es existe
    console.log('\n2. V√©rification de l\'existence de la base de donn√©es...');
    const [databases] = await connection.execute('SHOW DATABASES');
    const databaseExists = databases.some(db => db.Database === dbConfig.database);

    if (databaseExists) {
      console.log(`‚úÖ Base de donn√©es "${dbConfig.database}" trouv√©e !`);
      
      // Se connecter √† la base de donn√©es sp√©cifique
      await connection.execute(`USE ${dbConfig.database}`);
      console.log(`‚úÖ Connexion √† la base de donn√©es "${dbConfig.database}" r√©ussie !`);

      // V√©rifier les tables
      console.log('\n3. V√©rification des tables...');
      const [tables] = await connection.execute('SHOW TABLES');
      
      if (tables.length > 0) {
        console.log('‚úÖ Tables trouv√©es:');
        tables.forEach(table => {
          const tableName = Object.values(table)[0];
          console.log(`   - ${tableName}`);
        });
      } else {
        console.log('‚ö†Ô∏è  Aucune table trouv√©e dans la base de donn√©es');
        console.log('üí° Vous devez ex√©cuter le script SQL pour cr√©er les tables');
      }

      // Test de requ√™te simple
      console.log('\n4. Test de requ√™te simple...');
      const [users] = await connection.execute('SELECT COUNT(*) as count FROM User');
      console.log(`‚úÖ Requ√™te r√©ussie ! Nombre d'utilisateurs: ${users[0].count}`);

    } else {
      console.log(`‚ùå Base de donn√©es "${dbConfig.database}" non trouv√©e`);
      console.log('üí° Vous devez cr√©er la base de donn√©es avec le script SQL');
    }

    await connection.end();
    console.log('\nüéâ Test de connexion termin√© avec succ√®s !');

  } catch (error) {
    console.error('\n‚ùå Erreur de connexion:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Solutions possibles:');
      console.log('1. V√©rifiez que MySQL est d√©marr√©');
      console.log('2. V√©rifiez le port MySQL (par d√©faut: 3306)');
      console.log('3. V√©rifiez les param√®tres de connexion dans .env');
    } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
      console.log('\nüí° Solutions possibles:');
      console.log('1. V√©rifiez le nom d\'utilisateur et le mot de passe');
      console.log('2. V√©rifiez que l\'utilisateur a les permissions n√©cessaires');
    } else if (error.code === 'ER_BAD_DB_ERROR') {
      console.log('\nüí° Solutions possibles:');
      console.log('1. Cr√©ez la base de donn√©es avec: CREATE DATABASE mailBoxBd;');
      console.log('2. Ex√©cutez le script SQL database.sql');
    }
  }
}

// Ex√©cuter le test
testDatabaseConnection(); 